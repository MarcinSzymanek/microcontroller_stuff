[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\nastr\esp-idf\esp-projects\i2c_simple\build\bootloader\esp-idf\esptool_py && C:\Users\nastr\.espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Users/nastr/esp/v5.0.6/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/nastr/esp-idf/esp-projects/i2c_simple/build/bootloader/bootloader.bin"
Bootloader binary size 0x6750 bytes. 0x8b0 bytes (8%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/i2c_simple_main.c.obj
C:/Users/nastr/esp-idf/esp-projects/i2c_simple/main/i2c_simple_main.c: In function 'lcd_register_write_byte':
C:/Users/nastr/esp-idf/esp-projects/i2c_simple/main/i2c_simple_main.c:55:64: warning: passing argument 3 of 'i2c_master_write_to_device' makes pointer from integer without a cast [-Wint-conversion]
   55 |     ret = i2c_master_write_to_device(I2C_MASTER_NUM, LCD_ADDR, data, sizeof(data), I2C_MASTER_TIMEOUT_MS / portTICK_PERIOD_MS);
      |                                                                ^~~~
      |                                                                |
      |                                                                uint8_t {aka unsigned char}
In file included from C:/Users/nastr/esp-idf/esp-projects/i2c_simple/main/i2c_simple_main.c:21:
C:/Users/nastr/esp/v5.0.6/esp-idf/components/driver/include/driver/i2c.h:198:53: note: expected 'const uint8_t *' {aka 'const unsigned char *'} but argument is of type 'uint8_t' {aka 'unsigned char'}
  198 |                                      const uint8_t* write_buffer, size_t write_size,
      |                                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~
At top level:
C:/Users/nastr/esp-idf/esp-projects/i2c_simple/main/i2c_simple_main.c:43:18: warning: 'lcd_register_read' defined but not used [-Wunused-function]
   43 | static esp_err_t lcd_register_read(uint8_t reg_addr, uint8_t *data, size_t len)
      |                  ^~~~~~~~~~~~~~~~~
[3/7] Linking C static library esp-idf\main\libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable i2c-simple.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/nastr/esp-idf/esp-projects/i2c_simple/build/i2c-simple.bin
[7/7] cmd.exe /C "cd /D C:\Users\nastr\esp-idf\esp-projects\i2c_simple\build\esp-idf\esptool_py && C:\Users\nastr\.espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Users/nastr/esp/v5.0.6/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/nastr/esp-idf/esp-projects/i2c_simple/build/partition_table/partition-table.bin C:/Users/nastr/esp-idf/esp-projects/i2c_simple/build/i2c-simple.bin"
i2c-simple.bin binary size 0x319e0 bytes. Smallest app partition is 0x100000 bytes. 0xce620 bytes (81%) free.
