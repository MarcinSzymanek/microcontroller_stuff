
LCD_TFT_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000003cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000378  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003cc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003fc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  0000043c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000152d  00000000  00000000  000004cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000cf1  00000000  00000000  000019f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000064b  00000000  00000000  000026ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000140  00000000  00000000  00002d38  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000007e5  00000000  00000000  00002e78  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000006e2  00000000  00000000  0000365d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00003d3f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	c4 d0       	rcall	.+392    	; 0x27e <main>
  f6:	3e c1       	rjmp	.+636    	; 0x374 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <_Z9WriteDatahh>:
{
}

// Set Page Address (0-319), Start > End
void SetPageAddress(unsigned int Start, unsigned int End)
{
  fa:	88 b9       	out	0x08, r24	; 8
  fc:	62 b9       	out	0x02, r22	; 2
  fe:	00 00       	nop
 100:	84 b3       	in	r24, 0x14	; 20
 102:	8b 7f       	andi	r24, 0xFB	; 251
 104:	84 bb       	out	0x14, r24	; 20
 106:	00 00       	nop
 108:	84 b3       	in	r24, 0x14	; 20
 10a:	84 60       	ori	r24, 0x04	; 4
 10c:	84 bb       	out	0x14, r24	; 20
 10e:	08 95       	ret

00000110 <_Z11DisplayInitv>:
 110:	8f ef       	ldi	r24, 0xFF	; 255
 112:	81 b9       	out	0x01, r24	; 1
 114:	87 b9       	out	0x07, r24	; 7
 116:	80 e8       	ldi	r24, 0x80	; 128
 118:	8a b9       	out	0x0a, r24	; 10
 11a:	87 e0       	ldi	r24, 0x07	; 7
 11c:	83 bb       	out	0x13, r24	; 19
 11e:	8b b1       	in	r24, 0x0b	; 11
 120:	8f 77       	andi	r24, 0x7F	; 127
 122:	8b b9       	out	0x0b, r24	; 11
 124:	84 b3       	in	r24, 0x14	; 20
 126:	8d 7f       	andi	r24, 0xFD	; 253
 128:	84 bb       	out	0x14, r24	; 20
 12a:	84 b3       	in	r24, 0x14	; 20
 12c:	81 60       	ori	r24, 0x01	; 1
 12e:	84 bb       	out	0x14, r24	; 20
 130:	2f ef       	ldi	r18, 0xFF	; 255
 132:	84 e3       	ldi	r24, 0x34	; 52
 134:	9c e0       	ldi	r25, 0x0C	; 12
 136:	21 50       	subi	r18, 0x01	; 1
 138:	80 40       	sbci	r24, 0x00	; 0
 13a:	90 40       	sbci	r25, 0x00	; 0
 13c:	e1 f7       	brne	.-8      	; 0x136 <_Z11DisplayInitv+0x26>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <_Z11DisplayInitv+0x30>
 140:	00 00       	nop
 142:	84 b3       	in	r24, 0x14	; 20
 144:	8e 7f       	andi	r24, 0xFE	; 254
 146:	84 bb       	out	0x14, r24	; 20
 148:	2f ef       	ldi	r18, 0xFF	; 255
 14a:	84 e3       	ldi	r24, 0x34	; 52
 14c:	9c e0       	ldi	r25, 0x0C	; 12
 14e:	21 50       	subi	r18, 0x01	; 1
 150:	80 40       	sbci	r24, 0x00	; 0
 152:	90 40       	sbci	r25, 0x00	; 0
 154:	e1 f7       	brne	.-8      	; 0x14e <_Z11DisplayInitv+0x3e>
 156:	00 c0       	rjmp	.+0      	; 0x158 <_Z11DisplayInitv+0x48>
 158:	00 00       	nop
 15a:	84 b3       	in	r24, 0x14	; 20
 15c:	81 60       	ori	r24, 0x01	; 1
 15e:	84 bb       	out	0x14, r24	; 20
 160:	2f ef       	ldi	r18, 0xFF	; 255
 162:	84 e3       	ldi	r24, 0x34	; 52
 164:	9c e0       	ldi	r25, 0x0C	; 12
 166:	21 50       	subi	r18, 0x01	; 1
 168:	80 40       	sbci	r24, 0x00	; 0
 16a:	90 40       	sbci	r25, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <_Z11DisplayInitv+0x56>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <_Z11DisplayInitv+0x60>
 170:	00 00       	nop
 172:	60 e0       	ldi	r22, 0x00	; 0
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	c1 df       	rcall	.-126    	; 0xfa <_Z9WriteDatahh>
 178:	2f e7       	ldi	r18, 0x7F	; 127
 17a:	88 e3       	ldi	r24, 0x38	; 56
 17c:	91 e0       	ldi	r25, 0x01	; 1
 17e:	21 50       	subi	r18, 0x01	; 1
 180:	80 40       	sbci	r24, 0x00	; 0
 182:	90 40       	sbci	r25, 0x00	; 0
 184:	e1 f7       	brne	.-8      	; 0x17e <_Z11DisplayInitv+0x6e>
 186:	00 c0       	rjmp	.+0      	; 0x188 <_Z11DisplayInitv+0x78>
 188:	00 00       	nop
 18a:	60 e0       	ldi	r22, 0x00	; 0
 18c:	8a e3       	ldi	r24, 0x3A	; 58
 18e:	b5 df       	rcall	.-150    	; 0xfa <_Z9WriteDatahh>
 190:	8b b1       	in	r24, 0x0b	; 11
 192:	80 68       	ori	r24, 0x80	; 128
 194:	8b b9       	out	0x0b, r24	; 11
 196:	60 e0       	ldi	r22, 0x00	; 0
 198:	85 e5       	ldi	r24, 0x55	; 85
 19a:	af df       	rcall	.-162    	; 0xfa <_Z9WriteDatahh>
 19c:	8b b1       	in	r24, 0x0b	; 11
 19e:	8f 77       	andi	r24, 0x7F	; 127
 1a0:	8b b9       	out	0x0b, r24	; 11
 1a2:	08 95       	ret

000001a4 <_Z10DisplayOffv>:
 1a4:	60 e0       	ldi	r22, 0x00	; 0
 1a6:	88 e2       	ldi	r24, 0x28	; 40
 1a8:	a8 cf       	rjmp	.-176    	; 0xfa <_Z9WriteDatahh>
 1aa:	08 95       	ret

000001ac <_Z9DisplayOnv>:
 1ac:	60 e0       	ldi	r22, 0x00	; 0
 1ae:	89 e2       	ldi	r24, 0x29	; 41
 1b0:	a4 cf       	rjmp	.-184    	; 0xfa <_Z9WriteDatahh>
 1b2:	08 95       	ret

000001b4 <_Z8SleepOutv>:
 1b4:	60 e0       	ldi	r22, 0x00	; 0
 1b6:	81 e1       	ldi	r24, 0x11	; 17
 1b8:	a0 df       	rcall	.-192    	; 0xfa <_Z9WriteDatahh>
 1ba:	8f e3       	ldi	r24, 0x3F	; 63
 1bc:	9c e9       	ldi	r25, 0x9C	; 156
 1be:	01 97       	sbiw	r24, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <_Z8SleepOutv+0xa>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <_Z8SleepOutv+0x10>
 1c4:	00 00       	nop
 1c6:	08 95       	ret

000001c8 <_Z13FillRectanglejjjjhhh>:
// Fills rectangle with specified color
// (StartX,StartY) = Upper left corner. X horizontal (0-319) , Y vertical (0-239).
// Height (1-240) is vertical. Width (1-320) is horizontal.
// R-G-B = 5-6-5 bits.
void FillRectangle(unsigned int StartX, unsigned int StartY, unsigned int Width, unsigned int Height, unsigned char Red, unsigned char Green, unsigned char Blue)
{
 1c8:	8f 92       	push	r8
 1ca:	9f 92       	push	r9
 1cc:	af 92       	push	r10
 1ce:	bf 92       	push	r11
 1d0:	cf 92       	push	r12
 1d2:	df 92       	push	r13
 1d4:	ef 92       	push	r14
 1d6:	0f 93       	push	r16
 1d8:	cf 93       	push	r28
 1da:	df 93       	push	r29
 1dc:	4a 01       	movw	r8, r20
 1de:	59 01       	movw	r10, r18
	if(Red > MAX_RB) Red = MAX_RB;
 1e0:	00 32       	cpi	r16, 0x20	; 32
 1e2:	08 f0       	brcs	.+2      	; 0x1e6 <_Z13FillRectanglejjjjhhh+0x1e>
 1e4:	0f e1       	ldi	r16, 0x1F	; 31
	if(Blue > MAX_RB) Blue = MAX_RB;
 1e6:	8f e1       	ldi	r24, 0x1F	; 31
 1e8:	8c 15       	cp	r24, r12
 1ea:	20 f4       	brcc	.+8      	; 0x1f4 <_Z13FillRectanglejjjjhhh+0x2c>
 1ec:	0f 2e       	mov	r0, r31
 1ee:	ff e1       	ldi	r31, 0x1F	; 31
 1f0:	cf 2e       	mov	r12, r31
 1f2:	f0 2d       	mov	r31, r0
	if(Green > MAX_G) Green = MAX_G;
 1f4:	8f e3       	ldi	r24, 0x3F	; 63
 1f6:	8e 15       	cp	r24, r14
 1f8:	20 f4       	brcc	.+8      	; 0x202 <_Z13FillRectanglejjjjhhh+0x3a>
 1fa:	0f 2e       	mov	r0, r31
 1fc:	ff e3       	ldi	r31, 0x3F	; 63
 1fe:	ef 2e       	mov	r14, r31
 200:	f0 2d       	mov	r31, r0
	
	WriteData(0b00101100, 0);
 202:	60 e0       	ldi	r22, 0x00	; 0
 204:	8c e2       	ldi	r24, 0x2C	; 44
 206:	79 df       	rcall	.-270    	; 0xfa <_Z9WriteDatahh>
	
	DC_PORT |= (1 << DC_BIT);
 208:	8b b1       	in	r24, 0x0b	; 11
 20a:	80 68       	ori	r24, 0x80	; 128
 20c:	8b b9       	out	0x0b, r24	; 11
	
	unsigned char data_high = (Blue << 3);
 20e:	cc 0c       	add	r12, r12
 210:	cc 0c       	add	r12, r12
 212:	cc 0c       	add	r12, r12
	unsigned char data_low = Red;
	unsigned char g_high = (Green >> 3);
 214:	2e 2d       	mov	r18, r14
 216:	30 e0       	ldi	r19, 0x00	; 0
 218:	c9 01       	movw	r24, r18
 21a:	95 95       	asr	r25
 21c:	87 95       	ror	r24
 21e:	95 95       	asr	r25
 220:	87 95       	ror	r24
 222:	95 95       	asr	r25
 224:	87 95       	ror	r24
	unsigned char g_low = (Green & 0b00000111) << 5;
 226:	22 0f       	add	r18, r18
 228:	33 1f       	adc	r19, r19
 22a:	22 95       	swap	r18
 22c:	32 95       	swap	r19
 22e:	30 7f       	andi	r19, 0xF0	; 240
 230:	32 27       	eor	r19, r18
 232:	20 7f       	andi	r18, 0xF0	; 240
 234:	32 27       	eor	r19, r18
	data_high |= g_high;
 236:	ec 2c       	mov	r14, r12
 238:	e8 2a       	or	r14, r24
	data_low |= g_low;
 23a:	02 2b       	or	r16, r18
	
	
	for(int i = 0; i < Width; i++){
 23c:	c1 2c       	mov	r12, r1
 23e:	d1 2c       	mov	r13, r1
 240:	c8 14       	cp	r12, r8
 242:	d9 04       	cpc	r13, r9
 244:	70 f4       	brcc	.+28     	; 0x262 <_Z13FillRectanglejjjjhhh+0x9a>
 246:	c0 e0       	ldi	r28, 0x00	; 0
 248:	d0 e0       	ldi	r29, 0x00	; 0
		for (int j = 0; j < Height; j++){
 24a:	ca 15       	cp	r28, r10
 24c:	db 05       	cpc	r29, r11
 24e:	28 f4       	brcc	.+10     	; 0x25a <_Z13FillRectanglejjjjhhh+0x92>
			WriteData(data_low, data_high);
 250:	6e 2d       	mov	r22, r14
 252:	80 2f       	mov	r24, r16
 254:	52 df       	rcall	.-348    	; 0xfa <_Z9WriteDatahh>
	data_high |= g_high;
	data_low |= g_low;
	
	
	for(int i = 0; i < Width; i++){
		for (int j = 0; j < Height; j++){
 256:	21 96       	adiw	r28, 0x01	; 1
 258:	f8 cf       	rjmp	.-16     	; 0x24a <_Z13FillRectanglejjjjhhh+0x82>
	unsigned char g_low = (Green & 0b00000111) << 5;
	data_high |= g_high;
	data_low |= g_low;
	
	
	for(int i = 0; i < Width; i++){
 25a:	8f ef       	ldi	r24, 0xFF	; 255
 25c:	c8 1a       	sub	r12, r24
 25e:	d8 0a       	sbc	r13, r24
 260:	ef cf       	rjmp	.-34     	; 0x240 <_Z13FillRectanglejjjjhhh+0x78>
		for (int j = 0; j < Height; j++){
			WriteData(data_low, data_high);
		}
	}

	DC_PORT &= ~(1 << DC_BIT);
 262:	8b b1       	in	r24, 0x0b	; 11
 264:	8f 77       	andi	r24, 0x7F	; 127
 266:	8b b9       	out	0x0b, r24	; 11
 268:	df 91       	pop	r29
 26a:	cf 91       	pop	r28
 26c:	0f 91       	pop	r16
 26e:	ef 90       	pop	r14
 270:	df 90       	pop	r13
 272:	cf 90       	pop	r12
 274:	bf 90       	pop	r11
 276:	af 90       	pop	r10
 278:	9f 90       	pop	r9
 27a:	8f 90       	pop	r8
 27c:	08 95       	ret

0000027e <main>:
#include <avr/io.h>
#include "TFTdriver.c"

int main(void)
{
	DisplayInit();
 27e:	48 df       	rcall	.-368    	; 0x110 <_Z11DisplayInitv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 280:	2f ef       	ldi	r18, 0xFF	; 255
 282:	84 e3       	ldi	r24, 0x34	; 52
 284:	9c e0       	ldi	r25, 0x0C	; 12
 286:	21 50       	subi	r18, 0x01	; 1
 288:	80 40       	sbci	r24, 0x00	; 0
 28a:	90 40       	sbci	r25, 0x00	; 0
 28c:	e1 f7       	brne	.-8      	; 0x286 <main+0x8>
 28e:	00 c0       	rjmp	.+0      	; 0x290 <main+0x12>
	_delay_ms(250);
	
	SleepOut();
 290:	00 00       	nop
 292:	90 df       	rcall	.-224    	; 0x1b4 <_Z8SleepOutv>
 294:	2f ef       	ldi	r18, 0xFF	; 255
 296:	89 e6       	ldi	r24, 0x69	; 105
 298:	98 e1       	ldi	r25, 0x18	; 24
 29a:	21 50       	subi	r18, 0x01	; 1
 29c:	80 40       	sbci	r24, 0x00	; 0
 29e:	90 40       	sbci	r25, 0x00	; 0
 2a0:	e1 f7       	brne	.-8      	; 0x29a <main+0x1c>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <main+0x26>
	_delay_ms(500);
	DisplayOff();
 2a4:	00 00       	nop
 2a6:	7e df       	rcall	.-260    	; 0x1a4 <_Z10DisplayOffv>
 2a8:	2f ef       	ldi	r18, 0xFF	; 255
 2aa:	89 e6       	ldi	r24, 0x69	; 105
 2ac:	98 e1       	ldi	r25, 0x18	; 24
 2ae:	21 50       	subi	r18, 0x01	; 1
 2b0:	80 40       	sbci	r24, 0x00	; 0
 2b2:	90 40       	sbci	r25, 0x00	; 0
 2b4:	e1 f7       	brne	.-8      	; 0x2ae <main+0x30>
 2b6:	00 c0       	rjmp	.+0      	; 0x2b8 <main+0x3a>
	_delay_ms(500);
	
	DisplayOn();
 2b8:	00 00       	nop
 2ba:	78 df       	rcall	.-272    	; 0x1ac <_Z9DisplayOnv>
 2bc:	2f ef       	ldi	r18, 0xFF	; 255
 2be:	89 e6       	ldi	r24, 0x69	; 105
 2c0:	98 e1       	ldi	r25, 0x18	; 24
 2c2:	21 50       	subi	r18, 0x01	; 1
 2c4:	80 40       	sbci	r24, 0x00	; 0
 2c6:	90 40       	sbci	r25, 0x00	; 0
 2c8:	e1 f7       	brne	.-8      	; 0x2c2 <main+0x44>
 2ca:	00 c0       	rjmp	.+0      	; 0x2cc <main+0x4e>
	_delay_ms(500);
	DisplayOff();
 2cc:	00 00       	nop
 2ce:	6a df       	rcall	.-300    	; 0x1a4 <_Z10DisplayOffv>
 2d0:	2f ef       	ldi	r18, 0xFF	; 255
 2d2:	84 e3       	ldi	r24, 0x34	; 52
 2d4:	9c e0       	ldi	r25, 0x0C	; 12
 2d6:	21 50       	subi	r18, 0x01	; 1
 2d8:	80 40       	sbci	r24, 0x00	; 0
 2da:	90 40       	sbci	r25, 0x00	; 0
 2dc:	e1 f7       	brne	.-8      	; 0x2d6 <main+0x58>
 2de:	00 c0       	rjmp	.+0      	; 0x2e0 <main+0x62>
	_delay_ms(250);
	DisplayOn();
 2e0:	00 00       	nop
 2e2:	64 df       	rcall	.-312    	; 0x1ac <_Z9DisplayOnv>
 2e4:	2f ef       	ldi	r18, 0xFF	; 255
 2e6:	84 e3       	ldi	r24, 0x34	; 52
 2e8:	9c e0       	ldi	r25, 0x0C	; 12
 2ea:	21 50       	subi	r18, 0x01	; 1
 2ec:	80 40       	sbci	r24, 0x00	; 0
 2ee:	90 40       	sbci	r25, 0x00	; 0
 2f0:	e1 f7       	brne	.-8      	; 0x2ea <main+0x6c>
 2f2:	00 c0       	rjmp	.+0      	; 0x2f4 <main+0x76>
	_delay_ms(250);
	DisplayOff();
 2f4:	00 00       	nop
 2f6:	56 df       	rcall	.-340    	; 0x1a4 <_Z10DisplayOffv>
 2f8:	2f ef       	ldi	r18, 0xFF	; 255
 2fa:	84 e3       	ldi	r24, 0x34	; 52
 2fc:	9c e0       	ldi	r25, 0x0C	; 12
 2fe:	21 50       	subi	r18, 0x01	; 1
 300:	80 40       	sbci	r24, 0x00	; 0
 302:	90 40       	sbci	r25, 0x00	; 0
 304:	e1 f7       	brne	.-8      	; 0x2fe <main+0x80>
 306:	00 c0       	rjmp	.+0      	; 0x308 <main+0x8a>
	_delay_ms(250);
	DisplayOn();
 308:	00 00       	nop
 30a:	50 df       	rcall	.-352    	; 0x1ac <_Z9DisplayOnv>
 30c:	2f ef       	ldi	r18, 0xFF	; 255
 30e:	84 e3       	ldi	r24, 0x34	; 52
 310:	9c e0       	ldi	r25, 0x0C	; 12
 312:	21 50       	subi	r18, 0x01	; 1
 314:	80 40       	sbci	r24, 0x00	; 0
 316:	90 40       	sbci	r25, 0x00	; 0
 318:	e1 f7       	brne	.-8      	; 0x312 <main+0x94>
 31a:	00 c0       	rjmp	.+0      	; 0x31c <main+0x9e>
	_delay_ms(250);
	DisplayOff();
 31c:	00 00       	nop
 31e:	42 df       	rcall	.-380    	; 0x1a4 <_Z10DisplayOffv>
 320:	2f ef       	ldi	r18, 0xFF	; 255
 322:	84 e3       	ldi	r24, 0x34	; 52
 324:	9c e0       	ldi	r25, 0x0C	; 12
 326:	21 50       	subi	r18, 0x01	; 1
 328:	80 40       	sbci	r24, 0x00	; 0
 32a:	90 40       	sbci	r25, 0x00	; 0
 32c:	e1 f7       	brne	.-8      	; 0x326 <main+0xa8>
 32e:	00 c0       	rjmp	.+0      	; 0x330 <main+0xb2>
	_delay_ms(250);
	DisplayOn();
 330:	00 00       	nop
 332:	3c df       	rcall	.-392    	; 0x1ac <_Z9DisplayOnv>
 334:	2f ef       	ldi	r18, 0xFF	; 255
 336:	84 e3       	ldi	r24, 0x34	; 52
 338:	9c e0       	ldi	r25, 0x0C	; 12
 33a:	21 50       	subi	r18, 0x01	; 1
 33c:	80 40       	sbci	r24, 0x00	; 0
 33e:	90 40       	sbci	r25, 0x00	; 0
 340:	e1 f7       	brne	.-8      	; 0x33a <main+0xbc>
 342:	00 c0       	rjmp	.+0      	; 0x344 <main+0xc6>
 344:	00 00       	nop
	
	
    /* Replace with your application code */
    while (1) 
    {
		FillRectangle(0, 0, 200, 200, 0x0, 0x0, 0xFF);
 346:	cc 24       	eor	r12, r12
 348:	ca 94       	dec	r12
 34a:	e1 2c       	mov	r14, r1
 34c:	00 e0       	ldi	r16, 0x00	; 0
 34e:	28 ec       	ldi	r18, 0xC8	; 200
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	48 ec       	ldi	r20, 0xC8	; 200
 354:	50 e0       	ldi	r21, 0x00	; 0
 356:	60 e0       	ldi	r22, 0x00	; 0
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	34 df       	rcall	.-408    	; 0x1c8 <_Z13FillRectanglejjjjhhh>
 360:	2f ef       	ldi	r18, 0xFF	; 255
 362:	89 e6       	ldi	r24, 0x69	; 105
 364:	98 e1       	ldi	r25, 0x18	; 24
 366:	21 50       	subi	r18, 0x01	; 1
 368:	80 40       	sbci	r24, 0x00	; 0
 36a:	90 40       	sbci	r25, 0x00	; 0
 36c:	e1 f7       	brne	.-8      	; 0x366 <main+0xe8>
 36e:	00 c0       	rjmp	.+0      	; 0x370 <main+0xf2>
 370:	00 00       	nop
 372:	e9 cf       	rjmp	.-46     	; 0x346 <main+0xc8>

00000374 <_exit>:
 374:	f8 94       	cli

00000376 <__stop_program>:
 376:	ff cf       	rjmp	.-2      	; 0x376 <__stop_program>
